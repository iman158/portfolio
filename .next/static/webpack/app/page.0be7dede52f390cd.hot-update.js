/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/background-animations.tsx":
/*!**************************************************!*\
  !*** ./src/components/background-animations.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BackgroundAnimations)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _cyber_grid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cyber-grid */ \"(app-pages-browser)/./src/components/cyber-grid.tsx\");\n/* harmony import */ var _cyber_grid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cyber_grid__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction BackgroundAnimations() {\n    _s();\n    const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isLowPerformance, setIsLowPerformance] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    // Performance detection and optimization\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"BackgroundAnimations.useEffect\": ()=>{\n            setMounted(true);\n            // Detect low performance devices\n            const checkPerformance = {\n                \"BackgroundAnimations.useEffect.checkPerformance\": ()=>{\n                    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n                    const isLowMemory = navigator.deviceMemory && navigator.deviceMemory < 4;\n                    const isSlowConnection = navigator.connection && navigator.connection.effectiveType === \"slow-2g\";\n                    setIsLowPerformance(isMobile || isLowMemory || isSlowConnection);\n                }\n            }[\"BackgroundAnimations.useEffect.checkPerformance\"];\n            checkPerformance();\n        }\n    }[\"BackgroundAnimations.useEffect\"], []);\n    if (!mounted) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 z-0 overflow-hidden pointer-events-none\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_cyber_grid__WEBPACK_IMPORTED_MODULE_1___default()), {\n            isLowPerformance: isLowPerformance\n        }, void 0, false, {\n            fileName: \"D:\\\\portfolio\\\\src\\\\components\\\\background-animations.tsx\",\n            lineNumber: 31,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\portfolio\\\\src\\\\components\\\\background-animations.tsx\",\n        lineNumber: 30,\n        columnNumber: 5\n    }, this);\n}\n_s(BackgroundAnimations, \"2n8FmAaO3gXdl54jKtJ7hRMKLGw=\");\n_c = BackgroundAnimations;\nvar _c;\n$RefreshReg$(_c, \"BackgroundAnimations\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2JhY2tncm91bmQtYW5pbWF0aW9ucy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFb0M7QUFDTztBQUU1QixTQUFTRzs7SUFDdEIsTUFBTSxDQUFDQyxTQUFTQyxXQUFXLEdBQUdKLCtDQUFRQSxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQ0ssa0JBQWtCQyxvQkFBb0IsR0FBR04sK0NBQVFBLENBQUM7SUFFekQseUNBQXlDO0lBQ3pDQyxnREFBU0E7MENBQUM7WUFDUkcsV0FBVztZQUVYLGlDQUFpQztZQUNqQyxNQUFNRzttRUFBbUI7b0JBQ3ZCLE1BQU1DLFdBQVcsaUVBQWlFQyxJQUFJLENBQUNDLFVBQVVDLFNBQVM7b0JBQzFHLE1BQU1DLGNBQWMsVUFBbUJDLFlBQVksSUFBSSxVQUFtQkEsWUFBWSxHQUFHO29CQUN6RixNQUFNQyxtQkFDSixVQUFtQkMsVUFBVSxJQUFJLFVBQW1CQSxVQUFVLENBQUNDLGFBQWEsS0FBSztvQkFFbkZWLG9CQUFvQkUsWUFBWUksZUFBZUU7Z0JBQ2pEOztZQUVBUDtRQUNGO3lDQUFHLEVBQUU7SUFFTCxJQUFJLENBQUNKLFNBQVMsT0FBTztJQUVyQixxQkFDRSw4REFBQ2M7UUFBSUMsV0FBVTtrQkFDYiw0RUFBQ25CLG9EQUFTQTtZQUFDTSxrQkFBa0JBOzs7Ozs7Ozs7OztBQUduQztHQTVCd0JIO0tBQUFBIiwic291cmNlcyI6WyJEOlxccG9ydGZvbGlvXFxzcmNcXGNvbXBvbmVudHNcXGJhY2tncm91bmQtYW5pbWF0aW9ucy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcclxuXHJcbmltcG9ydCBDeWJlckdyaWQgZnJvbSBcIi4vY3liZXItZ3JpZFwiXHJcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmFja2dyb3VuZEFuaW1hdGlvbnMoKSB7XHJcbiAgY29uc3QgW21vdW50ZWQsIHNldE1vdW50ZWRdID0gdXNlU3RhdGUoZmFsc2UpXHJcbiAgY29uc3QgW2lzTG93UGVyZm9ybWFuY2UsIHNldElzTG93UGVyZm9ybWFuY2VdID0gdXNlU3RhdGUoZmFsc2UpXHJcblxyXG4gIC8vIFBlcmZvcm1hbmNlIGRldGVjdGlvbiBhbmQgb3B0aW1pemF0aW9uXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHNldE1vdW50ZWQodHJ1ZSlcclxuXHJcbiAgICAvLyBEZXRlY3QgbG93IHBlcmZvcm1hbmNlIGRldmljZXNcclxuICAgIGNvbnN0IGNoZWNrUGVyZm9ybWFuY2UgPSAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGlzTW9iaWxlID0gL0FuZHJvaWR8d2ViT1N8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5fElFTW9iaWxlfE9wZXJhIE1pbmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpXHJcbiAgICAgIGNvbnN0IGlzTG93TWVtb3J5ID0gKG5hdmlnYXRvciBhcyBhbnkpLmRldmljZU1lbW9yeSAmJiAobmF2aWdhdG9yIGFzIGFueSkuZGV2aWNlTWVtb3J5IDwgNFxyXG4gICAgICBjb25zdCBpc1Nsb3dDb25uZWN0aW9uID1cclxuICAgICAgICAobmF2aWdhdG9yIGFzIGFueSkuY29ubmVjdGlvbiAmJiAobmF2aWdhdG9yIGFzIGFueSkuY29ubmVjdGlvbi5lZmZlY3RpdmVUeXBlID09PSBcInNsb3ctMmdcIlxyXG5cclxuICAgICAgc2V0SXNMb3dQZXJmb3JtYW5jZShpc01vYmlsZSB8fCBpc0xvd01lbW9yeSB8fCBpc1Nsb3dDb25uZWN0aW9uKVxyXG4gICAgfVxyXG5cclxuICAgIGNoZWNrUGVyZm9ybWFuY2UoKVxyXG4gIH0sIFtdKVxyXG5cclxuICBpZiAoIW1vdW50ZWQpIHJldHVybiBudWxsXHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZpeGVkIGluc2V0LTAgei0wIG92ZXJmbG93LWhpZGRlbiBwb2ludGVyLWV2ZW50cy1ub25lXCI+XHJcbiAgICAgIDxDeWJlckdyaWQgaXNMb3dQZXJmb3JtYW5jZT17aXNMb3dQZXJmb3JtYW5jZX0gLz5cclxuICAgIDwvZGl2PlxyXG4gIClcclxufVxyXG4iXSwibmFtZXMiOlsiQ3liZXJHcmlkIiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJCYWNrZ3JvdW5kQW5pbWF0aW9ucyIsIm1vdW50ZWQiLCJzZXRNb3VudGVkIiwiaXNMb3dQZXJmb3JtYW5jZSIsInNldElzTG93UGVyZm9ybWFuY2UiLCJjaGVja1BlcmZvcm1hbmNlIiwiaXNNb2JpbGUiLCJ0ZXN0IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiaXNMb3dNZW1vcnkiLCJkZXZpY2VNZW1vcnkiLCJpc1Nsb3dDb25uZWN0aW9uIiwiY29ubmVjdGlvbiIsImVmZmVjdGl2ZVR5cGUiLCJkaXYiLCJjbGFzc05hbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/background-animations.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/cyber-grid.tsx":
/*!***************************************!*\
  !*** ./src/components/cyber-grid.tsx ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// \"use client\"\n// import { useEffect, useRef, useCallback } from \"react\"\n// interface CyberGridProps {\n//   isLowPerformance?: boolean\n// }\n// interface Particle {\n//   x: number\n//   y: number\n//   size: number\n//   speedX: number\n//   speedY: number\n//   opacity: number\n//   connection: number\n// }\n// interface Connection {\n//   from: number\n//   to: number\n//   life: number\n//   maxLife: number\n// }\n// export default function CyberGrid({ isLowPerformance = false }: CyberGridProps) {\n//   const canvasRef = useRef<HTMLCanvasElement>(null)\n//   const animationIdRef = useRef<number>()\n//   const particlesRef = useRef<Particle[]>([])\n//   const connectionsRef = useRef<Connection[]>([])\n//   const mouseRef = useRef({ x: 0, y: 0, active: false })\n//   // Performance-based configuration\n//   const config = {\n//     particleCount: isLowPerformance ? 30 : 60,\n//     gridSize: isLowPerformance ? 40 : 30,\n//     particleSize: isLowPerformance ? { min: 1, max: 2 } : { min: 1, max: 3 },\n//     connectionDistance: isLowPerformance ? 150 : 200,\n//     connectionMaxCount: isLowPerformance ? 2 : 3,\n//     fadeOpacity: isLowPerformance ? 0.2 : 0.1,\n//     maxFPS: isLowPerformance ? 30 : 60,\n//     particleSpeed: isLowPerformance ? 0.3 : 0.5,\n//     mouseInfluenceRadius: 150,\n//     mouseInfluenceStrength: 0.5,\n//   }\n//   const initParticles = useCallback(\n//     (canvas: HTMLCanvasElement) => {\n//       particlesRef.current = []\n//       for (let i = 0; i < config.particleCount; i++) {\n//         particlesRef.current.push({\n//           x: Math.random() * canvas.width,\n//           y: Math.random() * canvas.height,\n//           size: Math.random() * (config.particleSize.max - config.particleSize.min) + config.particleSize.min,\n//           speedX: (Math.random() - 0.5) * config.particleSpeed,\n//           speedY: (Math.random() - 0.5) * config.particleSpeed,\n//           opacity: Math.random() * 0.5 + 0.2,\n//           connection: Math.floor(Math.random() * config.connectionMaxCount),\n//         })\n//       }\n//       connectionsRef.current = []\n//     },\n//     [config.connectionMaxCount],\n//   )\n//   const drawGrid = useCallback(\n//     (ctx: CanvasRenderingContext2D, width: number, height: number) => {\n//       ctx.strokeStyle = \"rgba(0, 255, 0, 0.1)\"\n//       ctx.lineWidth = 0.5\n//       // Draw vertical lines\n//       for (let x = 0; x <= width; x += config.gridSize) {\n//         ctx.beginPath()\n//         ctx.moveTo(x, 0)\n//         ctx.lineTo(x, height)\n//         ctx.stroke()\n//       }\n//       // Draw horizontal lines\n//       for (let y = 0; y <= height; y += config.gridSize) {\n//         ctx.beginPath()\n//         ctx.moveTo(0, y)\n//         ctx.lineTo(width, y)\n//         ctx.stroke()\n//       }\n//     },\n//     [config.gridSize],\n//   )\n//   const updateConnections = useCallback(() => {\n//     const particles = particlesRef.current\n//     const connections = connectionsRef.current\n//     // Update existing connections\n//     for (let i = connections.length - 1; i >= 0; i--) {\n//       connections[i].life--\n//       if (connections[i].life <= 0) {\n//         connections.splice(i, 1)\n//       }\n//     }\n//     // Create new connections\n//     for (let i = 0; i < particles.length; i++) {\n//       const p1 = particles[i]\n//       // Count current connections for this particle\n//       const currentConnections = connections.filter((c) => c.from === i || c.to === i).length\n//       if (currentConnections < p1.connection) {\n//         for (let j = i + 1; j < particles.length; j++) {\n//           const p2 = particles[j]\n//           const dx = p1.x - p2.x\n//           const dy = p1.y - p2.y\n//           const distance = Math.sqrt(dx * dx + dy * dy)\n//           if (distance < config.connectionDistance) {\n//             // Check if this connection already exists\n//             const connectionExists = connections.some(\n//               (c) => (c.from === i && c.to === j) || (c.from === j && c.to === i),\n//             )\n//             if (!connectionExists) {\n//               const maxLife = Math.floor(Math.random() * 200) + 100\n//               connections.push({\n//                 from: i,\n//                 to: j,\n//                 life: maxLife,\n//                 maxLife: maxLife,\n//               })\n//               break\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }, [config.connectionDistance])\n//   const animate = useCallback(\n//     (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) => {\n//       let lastTime = 0\n//       const targetFrameTime = 1000 / config.maxFPS\n//       const frame = (currentTime: number) => {\n//         if (currentTime - lastTime < targetFrameTime) {\n//           animationIdRef.current = requestAnimationFrame(frame)\n//           return\n//         }\n//         lastTime = currentTime\n//         // Clear canvas with fade effect\n//         ctx.fillStyle = `rgba(0, 0, 0, ${config.fadeOpacity})`\n//         ctx.fillRect(0, 0, canvas.width, canvas.height)\n//         // Draw grid\n//         drawGrid(ctx, canvas.width, canvas.height)\n//         // Update and draw connections\n//         updateConnections()\n//         const connections = connectionsRef.current\n//         const particles = particlesRef.current\n//         // Draw connections\n//         for (const connection of connections) {\n//           const p1 = particles[connection.from]\n//           const p2 = particles[connection.to]\n//           const alpha = (connection.life / connection.maxLife) * 0.8\n//           ctx.strokeStyle = `rgba(0, 255, 0, ${alpha})`\n//           ctx.lineWidth = 1\n//           ctx.beginPath()\n//           ctx.moveTo(p1.x, p1.y)\n//           ctx.lineTo(p2.x, p2.y)\n//           ctx.stroke()\n//           // Draw data packet moving along the connection\n//           const progress = 1 - connection.life / connection.maxLife\n//           const packetX = p1.x + (p2.x - p1.x) * progress\n//           const packetY = p1.y + (p2.y - p1.y) * progress\n//           ctx.fillStyle = `rgba(0, 255, 255, ${alpha * 2})`\n//           ctx.beginPath()\n//           ctx.arc(packetX, packetY, 2, 0, Math.PI * 2)\n//           ctx.fill()\n//         }\n//         // Update and draw particles\n//         for (let i = 0; i < particles.length; i++) {\n//           const p = particles[i]\n//           // Apply mouse influence if active\n//           if (mouseRef.current.active) {\n//             const dx = mouseRef.current.x - p.x\n//             const dy = mouseRef.current.y - p.y\n//             const distance = Math.sqrt(dx * dx + dy * dy)\n//             if (distance < config.mouseInfluenceRadius) {\n//               const force = (config.mouseInfluenceRadius - distance) / config.mouseInfluenceRadius\n//               p.speedX += dx * force * config.mouseInfluenceStrength * 0.01\n//               p.speedY += dy * force * config.mouseInfluenceStrength * 0.01\n//             }\n//           }\n//           // Apply speed limits\n//           const maxSpeed = 2\n//           const speed = Math.sqrt(p.speedX * p.speedX + p.speedY * p.speedY)\n//           if (speed > maxSpeed) {\n//             p.speedX = (p.speedX / speed) * maxSpeed\n//             p.speedY = (p.speedY / speed) * maxSpeed\n//           }\n//           // Update position\n//           p.x += p.speedX\n//           p.y += p.speedY\n//           // Boundary check with bounce\n//           if (p.x < 0) {\n//             p.x = 0\n//             p.speedX *= -1\n//           } else if (p.x > canvas.width) {\n//             p.x = canvas.width\n//             p.speedX *= -1\n//           }\n//           if (p.y < 0) {\n//             p.y = 0\n//             p.speedY *= -1\n//           } else if (p.y > canvas.height) {\n//             p.y = canvas.height\n//             p.speedY *= -1\n//           }\n//           // Apply friction\n//           p.speedX *= 0.99\n//           p.speedY *= 0.99\n//           // Draw particle\n//           const size = p.size\n//           const gradient = ctx.createRadialGradient(p.x, p.y, 0, p.x, p.y, size * 2)\n//           gradient.addColorStop(0, `rgba(0, 255, 0, ${p.opacity})`)\n//           gradient.addColorStop(1, \"rgba(0, 255, 0, 0)\")\n//           ctx.fillStyle = gradient\n//           ctx.beginPath()\n//           ctx.arc(p.x, p.y, size * 2, 0, Math.PI * 2)\n//           ctx.fill()\n//           // Core of the particle\n//           ctx.fillStyle = `rgba(0, 255, 0, ${p.opacity * 2})`\n//           ctx.beginPath()\n//           ctx.arc(p.x, p.y, size, 0, Math.PI * 2)\n//           ctx.fill()\n//         }\n//         animationIdRef.current = requestAnimationFrame(frame)\n//       }\n//       animationIdRef.current = requestAnimationFrame(frame)\n//     },\n//     [config, drawGrid, updateConnections],\n//   )\n//   useEffect(() => {\n//     const canvas = canvasRef.current\n//     if (!canvas) return\n//     const ctx = canvas.getContext(\"2d\")\n//     if (!ctx) return\n//     // Set canvas dimensions to window size\n//     const resizeCanvas = () => {\n//       const dpr = isLowPerformance ? 1 : window.devicePixelRatio || 1\n//       const rect = canvas.getBoundingClientRect()\n//       canvas.width = rect.width * dpr\n//       canvas.height = rect.height * dpr\n//       canvas.style.width = rect.width + \"px\"\n//       canvas.style.height = rect.height + \"px\"\n//       ctx.scale(dpr, dpr)\n//       initParticles(canvas)\n//     }\n//     // Mouse interaction\n//     const handleMouseMove = (e: MouseEvent) => {\n//       const rect = canvas.getBoundingClientRect()\n//       mouseRef.current = {\n//         x: e.clientX - rect.left,\n//         y: e.clientY - rect.top,\n//         active: true,\n//       }\n//     }\n//     const handleMouseLeave = () => {\n//       mouseRef.current.active = false\n//     }\n//     canvas.addEventListener(\"mousemove\", handleMouseMove)\n//     canvas.addEventListener(\"mouseleave\", handleMouseLeave)\n//     canvas.addEventListener(\"mouseenter\", () => {\n//       mouseRef.current.active = true\n//     })\n//     // Touch interaction for mobile\n//     const handleTouchMove = (e: TouchEvent) => {\n//       if (e.touches.length > 0) {\n//         const rect = canvas.getBoundingClientRect()\n//         mouseRef.current = {\n//           x: e.touches[0].clientX - rect.left,\n//           y: e.touches[0].clientY - rect.top,\n//           active: true,\n//         }\n//       }\n//     }\n//     const handleTouchEnd = () => {\n//       mouseRef.current.active = false\n//     }\n//     canvas.addEventListener(\"touchmove\", handleTouchMove)\n//     canvas.addEventListener(\"touchend\", handleTouchEnd)\n//     resizeCanvas()\n//     animate(canvas, ctx)\n//     // Throttled resize handler\n//     let resizeTimeout: NodeJS.Timeout\n//     const handleResize = () => {\n//       clearTimeout(resizeTimeout)\n//       resizeTimeout = setTimeout(resizeCanvas, 250)\n//     }\n//     window.addEventListener(\"resize\", handleResize)\n//     return () => {\n//       if (animationIdRef.current) {\n//         cancelAnimationFrame(animationIdRef.current)\n//       }\n//       clearTimeout(resizeTimeout)\n//       window.removeEventListener(\"resize\", handleResize)\n//       canvas.removeEventListener(\"mousemove\", handleMouseMove)\n//       canvas.removeEventListener(\"mouseleave\", handleMouseLeave)\n//       canvas.removeEventListener(\"touchmove\", handleTouchMove)\n//       canvas.removeEventListener(\"touchend\", handleTouchEnd)\n//     }\n//   }, [animate, initParticles, isLowPerformance])\n//   return (\n//     <canvas\n//       ref={canvasRef}\n//       className=\"fixed inset-0 z-0 w-full h-full\"\n//       style={{\n//         width: \"100vw\",\n//         height: \"100vh\",\n//         willChange: \"transform\",\n//         pointerEvents: \"auto\", // Enable mouse interaction\n//       }}\n//     />\n//   )\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/cyber-grid.tsx\n"));

/***/ })

});