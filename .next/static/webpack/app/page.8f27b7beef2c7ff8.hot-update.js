"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/background-animations.tsx":
/*!**************************************************!*\
  !*** ./src/components/background-animations.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BackgroundAnimations)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _cyber_grid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cyber-grid */ \"(app-pages-browser)/./src/components/cyber-grid.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction BackgroundAnimations() {\n    _s();\n    const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isLowPerformance, setIsLowPerformance] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    // Performance detection and optimization\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"BackgroundAnimations.useEffect\": ()=>{\n            setMounted(true);\n            // Detect low performance devices\n            const checkPerformance = {\n                \"BackgroundAnimations.useEffect.checkPerformance\": ()=>{\n                    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n                    const isLowMemory = navigator.deviceMemory && navigator.deviceMemory < 4;\n                    const isSlowConnection = navigator.connection && navigator.connection.effectiveType === \"slow-2g\";\n                    setIsLowPerformance(isMobile || isLowMemory || isSlowConnection);\n                }\n            }[\"BackgroundAnimations.useEffect.checkPerformance\"];\n            checkPerformance();\n        }\n    }[\"BackgroundAnimations.useEffect\"], []);\n    if (!mounted) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 z-0 overflow-hidden pointer-events-none\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_cyber_grid__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n            isLowPerformance: isLowPerformance\n        }, void 0, false, {\n            fileName: \"D:\\\\portfolio\\\\src\\\\components\\\\background-animations.tsx\",\n            lineNumber: 31,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\portfolio\\\\src\\\\components\\\\background-animations.tsx\",\n        lineNumber: 30,\n        columnNumber: 5\n    }, this);\n}\n_s(BackgroundAnimations, \"2n8FmAaO3gXdl54jKtJ7hRMKLGw=\");\n_c = BackgroundAnimations;\nvar _c;\n$RefreshReg$(_c, \"BackgroundAnimations\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2JhY2tncm91bmQtYW5pbWF0aW9ucy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVvQztBQUNPO0FBRTVCLFNBQVNHOztJQUN0QixNQUFNLENBQUNDLFNBQVNDLFdBQVcsR0FBR0osK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDSyxrQkFBa0JDLG9CQUFvQixHQUFHTiwrQ0FBUUEsQ0FBQztJQUV6RCx5Q0FBeUM7SUFDekNDLGdEQUFTQTswQ0FBQztZQUNSRyxXQUFXO1lBRVgsaUNBQWlDO1lBQ2pDLE1BQU1HO21FQUFtQjtvQkFDdkIsTUFBTUMsV0FBVyxpRUFBaUVDLElBQUksQ0FBQ0MsVUFBVUMsU0FBUztvQkFDMUcsTUFBTUMsY0FBYyxVQUFtQkMsWUFBWSxJQUFJLFVBQW1CQSxZQUFZLEdBQUc7b0JBQ3pGLE1BQU1DLG1CQUNKLFVBQW1CQyxVQUFVLElBQUksVUFBbUJBLFVBQVUsQ0FBQ0MsYUFBYSxLQUFLO29CQUVuRlYsb0JBQW9CRSxZQUFZSSxlQUFlRTtnQkFDakQ7O1lBRUFQO1FBQ0Y7eUNBQUcsRUFBRTtJQUVMLElBQUksQ0FBQ0osU0FBUyxPQUFPO0lBRXJCLHFCQUNFLDhEQUFDYztRQUFJQyxXQUFVO2tCQUNiLDRFQUFDbkIsbURBQVNBO1lBQUNNLGtCQUFrQkE7Ozs7Ozs7Ozs7O0FBR25DO0dBNUJ3Qkg7S0FBQUEiLCJzb3VyY2VzIjpbIkQ6XFxwb3J0Zm9saW9cXHNyY1xcY29tcG9uZW50c1xcYmFja2dyb3VuZC1hbmltYXRpb25zLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxyXG5cclxuaW1wb3J0IEN5YmVyR3JpZCBmcm9tIFwiLi9jeWJlci1ncmlkXCJcclxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCYWNrZ3JvdW5kQW5pbWF0aW9ucygpIHtcclxuICBjb25zdCBbbW91bnRlZCwgc2V0TW91bnRlZF0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICBjb25zdCBbaXNMb3dQZXJmb3JtYW5jZSwgc2V0SXNMb3dQZXJmb3JtYW5jZV0gPSB1c2VTdGF0ZShmYWxzZSlcclxuXHJcbiAgLy8gUGVyZm9ybWFuY2UgZGV0ZWN0aW9uIGFuZCBvcHRpbWl6YXRpb25cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgc2V0TW91bnRlZCh0cnVlKVxyXG5cclxuICAgIC8vIERldGVjdCBsb3cgcGVyZm9ybWFuY2UgZGV2aWNlc1xyXG4gICAgY29uc3QgY2hlY2tQZXJmb3JtYW5jZSA9ICgpID0+IHtcclxuICAgICAgY29uc3QgaXNNb2JpbGUgPSAvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudClcclxuICAgICAgY29uc3QgaXNMb3dNZW1vcnkgPSAobmF2aWdhdG9yIGFzIGFueSkuZGV2aWNlTWVtb3J5ICYmIChuYXZpZ2F0b3IgYXMgYW55KS5kZXZpY2VNZW1vcnkgPCA0XHJcbiAgICAgIGNvbnN0IGlzU2xvd0Nvbm5lY3Rpb24gPVxyXG4gICAgICAgIChuYXZpZ2F0b3IgYXMgYW55KS5jb25uZWN0aW9uICYmIChuYXZpZ2F0b3IgYXMgYW55KS5jb25uZWN0aW9uLmVmZmVjdGl2ZVR5cGUgPT09IFwic2xvdy0yZ1wiXHJcblxyXG4gICAgICBzZXRJc0xvd1BlcmZvcm1hbmNlKGlzTW9iaWxlIHx8IGlzTG93TWVtb3J5IHx8IGlzU2xvd0Nvbm5lY3Rpb24pXHJcbiAgICB9XHJcblxyXG4gICAgY2hlY2tQZXJmb3JtYW5jZSgpXHJcbiAgfSwgW10pXHJcblxyXG4gIGlmICghbW91bnRlZCkgcmV0dXJuIG51bGxcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZml4ZWQgaW5zZXQtMCB6LTAgb3ZlcmZsb3ctaGlkZGVuIHBvaW50ZXItZXZlbnRzLW5vbmVcIj5cclxuICAgICAgPEN5YmVyR3JpZCBpc0xvd1BlcmZvcm1hbmNlPXtpc0xvd1BlcmZvcm1hbmNlfSAvPlxyXG4gICAgPC9kaXY+XHJcbiAgKVxyXG59XHJcbiJdLCJuYW1lcyI6WyJDeWJlckdyaWQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJhY2tncm91bmRBbmltYXRpb25zIiwibW91bnRlZCIsInNldE1vdW50ZWQiLCJpc0xvd1BlcmZvcm1hbmNlIiwic2V0SXNMb3dQZXJmb3JtYW5jZSIsImNoZWNrUGVyZm9ybWFuY2UiLCJpc01vYmlsZSIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpc0xvd01lbW9yeSIsImRldmljZU1lbW9yeSIsImlzU2xvd0Nvbm5lY3Rpb24iLCJjb25uZWN0aW9uIiwiZWZmZWN0aXZlVHlwZSIsImRpdiIsImNsYXNzTmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/background-animations.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/cyber-grid.tsx":
/*!***************************************!*\
  !*** ./src/components/cyber-grid.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CyberGrid)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction CyberGrid(param) {\n    let { isLowPerformance = false } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animationIdRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const particlesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const connectionsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const mouseRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        x: 0,\n        y: 0,\n        active: false\n    });\n    // Performance-based configuration\n    const config = {\n        particleCount: isLowPerformance ? 30 : 60,\n        gridSize: isLowPerformance ? 40 : 30,\n        particleSize: isLowPerformance ? {\n            min: 1,\n            max: 2\n        } : {\n            min: 1,\n            max: 3\n        },\n        connectionDistance: isLowPerformance ? 150 : 200,\n        connectionMaxCount: isLowPerformance ? 2 : 3,\n        fadeOpacity: isLowPerformance ? 0.2 : 0.1,\n        maxFPS: isLowPerformance ? 30 : 60,\n        particleSpeed: isLowPerformance ? 0.3 : 0.5,\n        mouseInfluenceRadius: 150,\n        mouseInfluenceStrength: 0.5\n    };\n    const initParticles = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CyberGrid.useCallback[initParticles]\": (canvas)=>{\n            particlesRef.current = [];\n            for(let i = 0; i < config.particleCount; i++){\n                particlesRef.current.push({\n                    x: Math.random() * canvas.width,\n                    y: Math.random() * canvas.height,\n                    size: Math.random() * (config.particleSize.max - config.particleSize.min) + config.particleSize.min,\n                    speedX: (Math.random() - 0.5) * config.particleSpeed,\n                    speedY: (Math.random() - 0.5) * config.particleSpeed,\n                    opacity: Math.random() * 0.5 + 0.2,\n                    connection: Math.floor(Math.random() * config.connectionMaxCount)\n                });\n            }\n            connectionsRef.current = [];\n        }\n    }[\"CyberGrid.useCallback[initParticles]\"], [\n        config.connectionMaxCount\n    ]);\n    const drawGrid = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CyberGrid.useCallback[drawGrid]\": (ctx, width, height)=>{\n            ctx.strokeStyle = \"rgba(0, 255, 0, 0.1)\";\n            ctx.lineWidth = 0.5;\n            // Draw vertical lines\n            for(let x = 0; x <= width; x += config.gridSize){\n                ctx.beginPath();\n                ctx.moveTo(x, 0);\n                ctx.lineTo(x, height);\n                ctx.stroke();\n            }\n            // Draw horizontal lines\n            for(let y = 0; y <= height; y += config.gridSize){\n                ctx.beginPath();\n                ctx.moveTo(0, y);\n                ctx.lineTo(width, y);\n                ctx.stroke();\n            }\n        }\n    }[\"CyberGrid.useCallback[drawGrid]\"], [\n        config.gridSize\n    ]);\n    const updateConnections = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CyberGrid.useCallback[updateConnections]\": ()=>{\n            const particles = particlesRef.current;\n            const connections = connectionsRef.current;\n            // Update existing connections\n            for(let i = connections.length - 1; i >= 0; i--){\n                connections[i].life--;\n                if (connections[i].life <= 0) {\n                    connections.splice(i, 1);\n                }\n            }\n            // Create new connections\n            for(let i = 0; i < particles.length; i++){\n                const p1 = particles[i];\n                // Count current connections for this particle\n                const currentConnections = connections.filter({\n                    \"CyberGrid.useCallback[updateConnections]\": (c)=>c.from === i || c.to === i\n                }[\"CyberGrid.useCallback[updateConnections]\"]).length;\n                if (currentConnections < p1.connection) {\n                    for(let j = i + 1; j < particles.length; j++){\n                        const p2 = particles[j];\n                        const dx = p1.x - p2.x;\n                        const dy = p1.y - p2.y;\n                        const distance = Math.sqrt(dx * dx + dy * dy);\n                        if (distance < config.connectionDistance) {\n                            // Check if this connection already exists\n                            const connectionExists = connections.some({\n                                \"CyberGrid.useCallback[updateConnections].connectionExists\": (c)=>c.from === i && c.to === j || c.from === j && c.to === i\n                            }[\"CyberGrid.useCallback[updateConnections].connectionExists\"]);\n                            if (!connectionExists) {\n                                const maxLife = Math.floor(Math.random() * 200) + 100;\n                                connections.push({\n                                    from: i,\n                                    to: j,\n                                    life: maxLife,\n                                    maxLife: maxLife\n                                });\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }[\"CyberGrid.useCallback[updateConnections]\"], [\n        config.connectionDistance\n    ]);\n    const animate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CyberGrid.useCallback[animate]\": (canvas, ctx)=>{\n            let lastTime = 0;\n            const targetFrameTime = 1000 / config.maxFPS;\n            const frame = {\n                \"CyberGrid.useCallback[animate].frame\": (currentTime)=>{\n                    if (currentTime - lastTime < targetFrameTime) {\n                        animationIdRef.current = requestAnimationFrame(frame);\n                        return;\n                    }\n                    lastTime = currentTime;\n                    // Clear canvas with fade effect\n                    ctx.fillStyle = \"rgba(0, 0, 0, \".concat(config.fadeOpacity, \")\");\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    // Draw grid\n                    drawGrid(ctx, canvas.width, canvas.height);\n                    // Update and draw connections\n                    updateConnections();\n                    const connections = connectionsRef.current;\n                    const particles = particlesRef.current;\n                    // Draw connections\n                    for (const connection of connections){\n                        const p1 = particles[connection.from];\n                        const p2 = particles[connection.to];\n                        const alpha = connection.life / connection.maxLife * 0.8;\n                        ctx.strokeStyle = \"rgba(0, 255, 0, \".concat(alpha, \")\");\n                        ctx.lineWidth = 1;\n                        ctx.beginPath();\n                        ctx.moveTo(p1.x, p1.y);\n                        ctx.lineTo(p2.x, p2.y);\n                        ctx.stroke();\n                        // Draw data packet moving along the connection\n                        const progress = 1 - connection.life / connection.maxLife;\n                        const packetX = p1.x + (p2.x - p1.x) * progress;\n                        const packetY = p1.y + (p2.y - p1.y) * progress;\n                        ctx.fillStyle = \"rgba(0, 255, 255, \".concat(alpha * 2, \")\");\n                        ctx.beginPath();\n                        ctx.arc(packetX, packetY, 2, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                    // Update and draw particles\n                    for(let i = 0; i < particles.length; i++){\n                        const p = particles[i];\n                        // Apply mouse influence if active\n                        if (mouseRef.current.active) {\n                            const dx = mouseRef.current.x - p.x;\n                            const dy = mouseRef.current.y - p.y;\n                            const distance = Math.sqrt(dx * dx + dy * dy);\n                            if (distance < config.mouseInfluenceRadius) {\n                                const force = (config.mouseInfluenceRadius - distance) / config.mouseInfluenceRadius;\n                                p.speedX += dx * force * config.mouseInfluenceStrength * 0.01;\n                                p.speedY += dy * force * config.mouseInfluenceStrength * 0.01;\n                            }\n                        }\n                        // Apply speed limits\n                        const maxSpeed = 2;\n                        const speed = Math.sqrt(p.speedX * p.speedX + p.speedY * p.speedY);\n                        if (speed > maxSpeed) {\n                            p.speedX = p.speedX / speed * maxSpeed;\n                            p.speedY = p.speedY / speed * maxSpeed;\n                        }\n                        // Update position\n                        p.x += p.speedX;\n                        p.y += p.speedY;\n                        // Boundary check with bounce\n                        if (p.x < 0) {\n                            p.x = 0;\n                            p.speedX *= -1;\n                        } else if (p.x > canvas.width) {\n                            p.x = canvas.width;\n                            p.speedX *= -1;\n                        }\n                        if (p.y < 0) {\n                            p.y = 0;\n                            p.speedY *= -1;\n                        } else if (p.y > canvas.height) {\n                            p.y = canvas.height;\n                            p.speedY *= -1;\n                        }\n                        // Apply friction\n                        p.speedX *= 0.99;\n                        p.speedY *= 0.99;\n                        // Draw particle\n                        const size = p.size;\n                        const gradient = ctx.createRadialGradient(p.x, p.y, 0, p.x, p.y, size * 2);\n                        gradient.addColorStop(0, \"rgba(0, 255, 0, \".concat(p.opacity, \")\"));\n                        gradient.addColorStop(1, \"rgba(0, 255, 0, 0)\");\n                        ctx.fillStyle = gradient;\n                        ctx.beginPath();\n                        ctx.arc(p.x, p.y, size * 2, 0, Math.PI * 2);\n                        ctx.fill();\n                        // Core of the particle\n                        ctx.fillStyle = \"rgba(0, 255, 0, \".concat(p.opacity * 2, \")\");\n                        ctx.beginPath();\n                        ctx.arc(p.x, p.y, size, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                    animationIdRef.current = requestAnimationFrame(frame);\n                }\n            }[\"CyberGrid.useCallback[animate].frame\"];\n            animationIdRef.current = requestAnimationFrame(frame);\n        }\n    }[\"CyberGrid.useCallback[animate]\"], [\n        config,\n        drawGrid,\n        updateConnections\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CyberGrid.useEffect\": ()=>{\n            const canvas = canvasRef.current;\n            if (!canvas) return;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return;\n            // Set canvas dimensions to window size\n            const resizeCanvas = {\n                \"CyberGrid.useEffect.resizeCanvas\": ()=>{\n                    const dpr = isLowPerformance ? 1 : window.devicePixelRatio || 1;\n                    const rect = canvas.getBoundingClientRect();\n                    canvas.width = rect.width * dpr;\n                    canvas.height = rect.height * dpr;\n                    canvas.style.width = rect.width + \"px\";\n                    canvas.style.height = rect.height + \"px\";\n                    ctx.scale(dpr, dpr);\n                    initParticles(canvas);\n                }\n            }[\"CyberGrid.useEffect.resizeCanvas\"];\n            // Mouse interaction\n            const handleMouseMove = {\n                \"CyberGrid.useEffect.handleMouseMove\": (e)=>{\n                    const rect = canvas.getBoundingClientRect();\n                    mouseRef.current = {\n                        x: e.clientX - rect.left,\n                        y: e.clientY - rect.top,\n                        active: true\n                    };\n                }\n            }[\"CyberGrid.useEffect.handleMouseMove\"];\n            const handleMouseLeave = {\n                \"CyberGrid.useEffect.handleMouseLeave\": ()=>{\n                    mouseRef.current.active = false;\n                }\n            }[\"CyberGrid.useEffect.handleMouseLeave\"];\n            canvas.addEventListener(\"mousemove\", handleMouseMove);\n            canvas.addEventListener(\"mouseleave\", handleMouseLeave);\n            canvas.addEventListener(\"mouseenter\", {\n                \"CyberGrid.useEffect\": ()=>{\n                    mouseRef.current.active = true;\n                }\n            }[\"CyberGrid.useEffect\"]);\n            // Touch interaction for mobile\n            const handleTouchMove = {\n                \"CyberGrid.useEffect.handleTouchMove\": (e)=>{\n                    if (e.touches.length > 0) {\n                        const rect = canvas.getBoundingClientRect();\n                        mouseRef.current = {\n                            x: e.touches[0].clientX - rect.left,\n                            y: e.touches[0].clientY - rect.top,\n                            active: true\n                        };\n                    }\n                }\n            }[\"CyberGrid.useEffect.handleTouchMove\"];\n            const handleTouchEnd = {\n                \"CyberGrid.useEffect.handleTouchEnd\": ()=>{\n                    mouseRef.current.active = false;\n                }\n            }[\"CyberGrid.useEffect.handleTouchEnd\"];\n            canvas.addEventListener(\"touchmove\", handleTouchMove);\n            canvas.addEventListener(\"touchend\", handleTouchEnd);\n            resizeCanvas();\n            animate(canvas, ctx);\n            // Throttled resize handler\n            let resizeTimeout;\n            const handleResize = {\n                \"CyberGrid.useEffect.handleResize\": ()=>{\n                    clearTimeout(resizeTimeout);\n                    resizeTimeout = setTimeout(resizeCanvas, 250);\n                }\n            }[\"CyberGrid.useEffect.handleResize\"];\n            window.addEventListener(\"resize\", handleResize);\n            return ({\n                \"CyberGrid.useEffect\": ()=>{\n                    if (animationIdRef.current) {\n                        cancelAnimationFrame(animationIdRef.current);\n                    }\n                    clearTimeout(resizeTimeout);\n                    window.removeEventListener(\"resize\", handleResize);\n                    canvas.removeEventListener(\"mousemove\", handleMouseMove);\n                    canvas.removeEventListener(\"mouseleave\", handleMouseLeave);\n                    canvas.removeEventListener(\"touchmove\", handleTouchMove);\n                    canvas.removeEventListener(\"touchend\", handleTouchEnd);\n                }\n            })[\"CyberGrid.useEffect\"];\n        }\n    }[\"CyberGrid.useEffect\"], [\n        animate,\n        initParticles,\n        isLowPerformance\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        className: \"fixed inset-0 z-0 w-full h-full\",\n        style: {\n            width: \"100vw\",\n            height: \"100vh\",\n            willChange: \"transform\",\n            pointerEvents: \"auto\"\n        }\n    }, void 0, false, {\n        fileName: \"D:\\\\portfolio\\\\src\\\\components\\\\cyber-grid.tsx\",\n        lineNumber: 350,\n        columnNumber: 5\n    }, this);\n}\n_s(CyberGrid, \"zYe9FR8njVk9lDuGjyFaYDVHwBE=\");\n_c = CyberGrid;\nvar _c;\n$RefreshReg$(_c, \"CyberGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/cyber-grid.tsx\n"));

/***/ })

});